[profile.default]
out = 'out'
libs = ['lib']
ffi = true
fs_permissions = [
    { access = "read", path = "./test/auth/mocks/AuthWrappers.huff" },
    { access = "read", path = "./test/auth/mocks/OwnedWrappers.huff" },
    { access = "read", path = "./test/auth/mocks/RolesAuthorityWrappers.huff" },

    { access = "read", path = "./test/data-structures/mocks/ArrayWrappers.huff" },
    { access = "read", path = "./test/data-structures/mocks/HashmapWrappers.huff" },
    { access = "read", path = "./test/data-structures/mocks/BytesWrappers.huff" },

    { access = "read", path = "./test/math/mocks/FixedPointMathWrappers.huff" },
    { access = "read", path = "./test/math/mocks/SafeMathWrappers.huff" },
    { access = "read", path = "./test/math/mocks/MathWrappers.huff" },
    { access = "read", path = "./test/math/mocks/TrigonometryWrappers.huff" },

    { access = "read", path = "./test/mechanisms/huff-vrgda/mocks/LinearVRGDAWrappers.huff" },
    { access = "read", path = "./test/mechanisms/huff-vrgda/mocks/LogisticVRGDAWrappers.huff" },

    { access = "read", path = "./test/proxies/mocks/ClonesWrappers.huff" },
    { access = "read", path = "./test/proxies/mocks/ProxyWrappers.huff" },
    { access = "read", path = "./test/proxies/mocks/ProxyFactoryWrappers.huff" },

    { access = "read", path = "./test/tokens/mocks/ERC20MintableWrappers.huff" },
    { access = "read", path = "./test/tokens/mocks/ERC20Wrappers.huff" },
    { access = "read", path = "./test/tokens/mocks/ERC721Wrappers.huff" },
    { access = "read", path = "./test/tokens/mocks/ERC1155Wrappers.huff" },
    { access = "read", path = "./test/tokens/mocks/ERC4626Wrappers.huff" },

    { access = "read", path = "./test/utils/mocks/BitPackLibWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/CallWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/ErrorWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/EthersWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/JumpTableUtilWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/LibBitWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/MerkleDistributorWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/MerkleProofLibWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/MulticallableWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/Create3Wrappers.huff" },
    { access = "read", path = "./test/utils/mocks/PausableWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/ReentrancyGuardWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/RefundedWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/SafeTransferLibWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/ShufflingWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/InsertionSortWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/SSTORE2Wrappers.huff" },
    { access = "read", path = "./test/utils/mocks/TSOwnableWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/ECDSAWrappers.huff" },
    { access = "read", path = "./test/utils/mocks/DateTimeLibWrappers.huff" },
]
remappings = [
    "forge-std/=lib/forge-std/src/",
    "foundry-huff/=lib/foundry-huff/src/",
    "solmate/=lib/solmate/src/"
]

[profile.default.fuzz]
runs = 1000