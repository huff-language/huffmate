
#define function mint(address, uint256) nonpayable returns ()
#define function burn(address, uint256) nonpayable returns ()

#define macro BURN() = takes (0) returns (0) {
    NON_PAYABLE()
    // Setup the stack for the burn function.
    0x04 calldataload   // [from]
    0x24 calldataload   // [value, from]

    // Call ERC20.huff's _BURN macro
    _BURN()             // []

    // Stop Execution
    stop                // []
}

#define macro MINT() = takes (0) returns (0) {
    NON_PAYABLE()

    // Setup the stack for the mint function.
    0x04 calldataload   // [to]
    0x24 calldataload   // [value, to]

    // Call ERC20.huff's _MINT macro
    _MINT()             // []

    // Stop Execution
    stop                // []
}

#define macro CONSTRUCTOR() = takes (0) returns (0) {
    ERC20_CONSTRUCTOR()
}

#define macro MAIN() = takes (0) returns (0) {
    0x00 calldataload 0xE0 shr              // [sig]

    dup1 __FUNC_SIG(mint) eq mint jumpi     // [sig]
    dup1 __FUNC_SIG(burn) eq burn jumpi     // [sig]

    ERC20_MAIN()                            // [sig]

    // Revert if no selector matches
    0x00 0x00 revert

    mint:
        MINT()
    burn:
        BURN()
}